version: '3.8'

services:
    eureka-server:
      build: ./server
      ports:
        - "8081:8081"
      networks:
        -  auction-network
      restart: unless-stopped

    gateway:
      build: ./gateway
      ports:
        - "8082:8082"
      networks:
        -  auction-network
      depends_on:
        eureka-server:
          condition: service_started
      restart: unless-stopped

    rabbitmq:
      image: rabbitmq:3-management-alpine
      env_file:
        - .env
      environment:
        - RABBITMQ_DEFAULT_USER=${SPRING_RABBITMQ_USERNAME}
        - RABBITMQ_DEFAULT_PASS=${SPRING_RABBITMQ_PASSWORD}
      ports:
        - "5672:5672"
        - "15672:15672"
      networks:
        - auction-network
      healthcheck:
        test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
        interval: 20s
        timeout: 20s
        retries: 3
      restart: always

    db-auction:
      image: postgres:16-alpine
      env_file:
        - .env
      environment:
        - POSTGRES_DB=${POSTGRES_DB_AUCTION}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      ports:
        - "5433:5432"
      networks:
        - auction-network
      volumes:
        - auction-db-data:/var/lib/postgresql/data
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB_AUCTION}" ]
        interval: 10s
        timeout: 5s
        retries: 5
      restart: unless-stopped


    db-bid:
      image: postgres:16-alpine
      env_file:
        - .env
      environment:
        - POSTGRES_DB=${POSTGRES_DB_BID}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      ports:
        - "5435:5432"
      networks:
        - auction-network
      volumes:
        - bid-db-data:/var/lib/postgresql/data
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB_BID}" ]
        interval: 10s
        timeout: 5s
        retries: 5
      restart: unless-stopped


    auction-ms:
      build: ./auction
      env_file:
        - .env
      environment:
        - SPRING_PROFILES_ACTIVE=production
        - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL_AUCTION}
        - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
        - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
        - EUREKA_SERVER=${EUREKA_SERVER}
      ports:
        - "8083:8083"
      networks:
        - auction-network
      depends_on:
        db-auction:
          condition: service_healthy
        rabbitmq:
          condition: service_healthy
      restart: unless-stopped


    bid-ms:
        build: ./bid
        env_file:
          - .env
        environment:
          - SPRING_PROFILES_ACTIVE=production
          - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL_BID}
          - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
          - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
          - EUREKA_SERVER=${EUREKA_SERVER}
        ports:
          - "8084:8084"
        networks:
          - auction-network
        depends_on:
          db-bid:
            condition: service_healthy
          rabbitmq:
            condition: service_healthy
        restart: unless-stopped


networks:
  auction-network:
    driver: bridge

volumes:
  auction-db-data:
  bid-db-data: