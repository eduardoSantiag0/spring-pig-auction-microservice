spring.application.name=auction-ms
spring.config.import=optional:file:.env

#spring.datasource.url=${SPRING_DATASOURCE_URL_AUCTION}
#spring.datasource.username=${POSTGRES_USER}
#spring.datasource.password=${POSTGRES_PASSWORD}

spring.datasource.url=jdbc:postgresql://localhost:5432/auction_db
#spring.datasource.url=jdbc:postgresql://localhost:5432/auction-ms
#spring.datasource.url=jdbc:postgresql://localhost:5433/auction-ms
spring.datasource.username=postgres
spring.datasource.password=v!jdEcTKGr4D!vZRu9

spring.datasource.driver-class-name=org.postgresql.Driver


#hibernate.dialect=org.hibernate.dialect.HSQLDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.format-sql=true

spring.flyway.enabled=false

#eureka.client.serviceUrl.defaultZone=${EUREKA_SERVER}
eureka.client.serviceUrl.defaultZone=http://localhost:8081/eureka
#eureka.client.serviceUrl.defaultZone=http://eureka-server:8081/eureka


eureka.instance.instance-id=${spring.application.name}:${random.int}
server.port=8083

spring.rabbitmq.host=localhost
#spring.rabbitmq.host=rabbitmq

spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

broker.queue=auction.queue
broker.exchange=auction.ex
broker.routingKey=routingKey.auction


# Eureka registre o auction-ms como host.docker.internal,
# permitindo outros containers encontra-lo
eureka.instance.hostname=host.docker.internal
